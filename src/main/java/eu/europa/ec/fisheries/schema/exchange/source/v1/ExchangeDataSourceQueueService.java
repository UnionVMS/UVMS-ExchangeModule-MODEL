package eu.europa.ec.fisheries.schema.exchange.source.v1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2017-01-05T09:06:11.259+01:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "ExchangeDataSourceQueueService", 
                  wsdlLocation = "file:/C:/uvms-3.0.0-boba-fett/models/ExchangeModule/src/main/resources/contract/ExchangeDataSourceService.wsdl",
                  targetNamespace = "urn:source.exchange.schema.fisheries.ec.europa.eu:v1") 
public class ExchangeDataSourceQueueService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:source.exchange.schema.fisheries.ec.europa.eu:v1", "ExchangeDataSourceQueueService");
    public final static QName DataSourcePortType = new QName("urn:source.exchange.schema.fisheries.ec.europa.eu:v1", "DataSourcePortType");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/uvms-3.0.0-boba-fett/models/ExchangeModule/src/main/resources/contract/ExchangeDataSourceService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ExchangeDataSourceQueueService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/uvms-3.0.0-boba-fett/models/ExchangeModule/src/main/resources/contract/ExchangeDataSourceService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ExchangeDataSourceQueueService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ExchangeDataSourceQueueService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ExchangeDataSourceQueueService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ExchangeDataSourceQueueService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ExchangeDataSourceQueueService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ExchangeDataSourceQueueService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ExchangeDataSourcePortType
     */
    @WebEndpoint(name = "DataSourcePortType")
    public ExchangeDataSourcePortType getDataSourcePortType() {
        return super.getPort(DataSourcePortType, ExchangeDataSourcePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExchangeDataSourcePortType
     */
    @WebEndpoint(name = "DataSourcePortType")
    public ExchangeDataSourcePortType getDataSourcePortType(WebServiceFeature... features) {
        return super.getPort(DataSourcePortType, ExchangeDataSourcePortType.class, features);
    }

}
